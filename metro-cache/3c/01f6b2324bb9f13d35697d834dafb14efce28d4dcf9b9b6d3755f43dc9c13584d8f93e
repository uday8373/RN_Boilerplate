{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@react-native-community/netinfo","data":{"isAsync":false}},{"name":"axios","data":{"isAsync":false}},{"name":"./constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Network = void 0;\n\n  var _netinfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@react-native-community/netinfo\"));\n\n  var _axios = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"axios\"));\n\n  var _constants = _$$_REQUIRE(_dependencyMap[3], \"./constants\");\n\n  XMLHttpRequest = GLOBAL.originalXMLHttpRequest ? GLOBAL.originalXMLHttpRequest : GLOBAL.XMLHttpRequest;\n\n  var Network = function Network(method, endpoint) {\n    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return fetch = new Promise(function (resolve, reject) {\n      _netinfo.default.fetch().then(function (state) {\n        if (state.isConnected) {\n          (0, _axios.default)({\n            method: method,\n            url: \"\" + _constants.base_url + endpoint,\n            data: data\n          }).then(function (response) {\n            if (response.status === 200) {\n              resolve(response.data);\n            } else {\n              reject('something went wrong');\n            }\n          });\n        }\n      });\n    });\n  };\n\n  exports.Network = Network;\n});","map":[[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,8,0,"XMLHttpRequest"],[15,2,8,0,"XMLHttpRequest"],[15,16,8,14],[15,19,8,17,"GLOBAL"],[15,25,8,23],[15,26,8,24,"originalXMLHttpRequest"],[15,48,8,17],[15,51,9,2,"GLOBAL"],[15,57,9,8],[15,58,9,9,"originalXMLHttpRequest"],[15,80,8,17],[15,83,9,34,"GLOBAL"],[15,89,9,40],[15,90,9,41,"XMLHttpRequest"],[15,104,8,0],[17,0,13,7],[17,6,13,13,"Network"],[17,13,13,20],[17,16,13,23],[17,25,13,13,"Network"],[17,32,13,23],[17,33,13,24,"method"],[17,39,13,23],[17,41,13,32,"endpoint"],[17,49,13,23],[17,51,13,56],[18,0,13,56],[18,8,13,42,"data"],[18,12,13,56],[18,83,13,49],[18,85,13,56],[19,0,14,2],[19,11,14,9,"fetch"],[19,16,14,14],[19,19,14,17],[19,23,14,21,"Promise"],[19,30,14,17],[19,31,14,29],[19,41,14,30,"resolve"],[19,48,14,29],[19,50,14,39,"reject"],[19,56,14,29],[19,58,14,50],[20,0,16,4,"NetInfo"],[20,23,16,12,"fetch"],[20,28,16,4],[20,31,16,20,"then"],[20,35,16,4],[20,36,16,25],[20,46,16,25,"state"],[20,51,16,30],[20,53,16,34],[21,0,17,6],[21,12,17,10,"state"],[21,17,17,15],[21,18,17,16,"isConnected"],[21,29,17,6],[21,31,17,29],[22,0,18,8],[22,30,18,14],[23,0,19,10,"method"],[23,12,19,10,"method"],[23,18,19,16],[23,20,19,10,"method"],[23,26,18,14],[24,0,20,10,"url"],[24,12,20,10,"url"],[24,15,20,13],[24,22,20,18,"base_url"],[24,41,20,13],[24,44,20,29,"endpoint"],[24,52,18,14],[25,0,21,10,"data"],[25,12,21,10,"data"],[25,16,21,14],[25,18,21,10,"data"],[26,0,18,14],[26,11,18,8],[26,13,22,11,"then"],[26,17,18,8],[26,18,22,16],[26,28,22,17,"response"],[26,36,22,16],[26,38,22,30],[27,0,23,12],[27,16,23,15,"response"],[27,24,23,23],[27,25,23,24,"status"],[27,31,23,15],[27,36,23,35],[27,39,23,12],[27,41,23,40],[28,0,24,14,"resolve"],[28,14,24,14,"resolve"],[28,21,24,21],[28,22,24,22,"response"],[28,30,24,30],[28,31,24,31,"data"],[28,35,24,21],[28,36,24,14],[29,0,25,13],[29,13,23,12],[29,19,25,19],[30,0,26,14,"reject"],[30,14,26,14,"reject"],[30,20,26,20],[30,21,26,21],[30,43,26,20],[30,44,26,14],[31,0,27,13],[32,0,28,9],[32,11,18,8],[33,0,29,7],[34,0,30,5],[34,7,16,4],[35,0,31,3],[35,5,14,17],[35,6,14,2],[36,0,32,1],[36,3,13,7]]},"type":"js/module"}]}